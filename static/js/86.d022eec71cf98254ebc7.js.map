{"version":3,"sources":["/Users/macbook/projects/solar-components/core/dist/esm-es5/css-shim-6aaf713d-9b13816a.js"],"names":["StyleNode","this","start","end","previous","parent","rules","parsedCssText","cssText","atRule","type","keyframesName","selector","parsedSelector","parse","text","parseCss","node","t","substring","trim","ss","s","replace","code","arguments","repeat","length","_expandUnicodeEscapes","RX","multipleSpaces","lastIndexOf","indexOf","AT_START","MEDIA_START","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","i","l","r","root","n","OPEN_BRACE","p","push","CLOSE_BRACE","lex","comments","port","customProp","mixinProp","mixinApply","varApply","findRegex","regex","offset","VAR_USAGE_START","VAR_ASSIGN_START","COMMENTS","TRAILING_LINES","compileVar","template","varMeta","varPos","endVar","count","c","findVarEndIndex","_a","propName","fallback","slice","join","undefined","parseVar","compileTemplate","params","props","prop","executeTemplate","resolveVar","final","findEndValue","onStr","double","index","assignPos","removeCustomAssigns","segments","resolveValues","selectors","forEach","declarations","dec","value","propsValues","entries","Object","_loop_1","dirty","key","propValue","getSelectors","filter","rule","xArray","FIND_DECLARATIONS","exec","normalizeValue","important","getDeclarations","specificity","nu","endsWith","substr","getSelectorsForScopes","scopes","scope","apply","parseCSS","original","ast","usesCssVars","addGlobalStyle","globalScopes","styleEl","some","css","textContent","updateGlobalScopes","replaceScope","oldScopeId","newScopeId","find","RegExp","loadDocument","doc","loadDocumentStyles","promises","linkElms","querySelectorAll","addGlobalLink","Promise","all","loadDocumentLinks","then","Array","from","map","style","Boolean","linkElm","url","href","fetch","rsp","CSS_VARIABLE_REGEXP","test","parentNode","CSS_URL_REGEXP","lastIndex","hasRelativeUrls","originalUrl","basePath","fullMatch","relativeUrl","fixRelativeUrls","createElement","setAttribute","insertBefore","remove","catch","err","console","error","CustomStyle","win","hostStyleMap","WeakMap","hostScopeMap","scopesMap","Map","didInit","prototype","initShim","_this","resolve","requestAnimationFrame","MutationObserver","observe","document","head","childList","addLink","linkEl","updateGlobal","createHostStyle","hostEl","cssScopeId","isScoped","has","Error","scopeId","baseScope","registerHostTemplate","set","segment","sel","assign","removeHost","get","delete","updateHost","scopesForElement","hostTemplateMap","parentElement","getScopesForElement","activeSelectors","el","matches","sort","a","b","getActiveSelectors","window","__stencil_cssshim","CSS","supports"],"mappings":"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","file":"static/js/86.d642aa0f.js","sourcesContent":["/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n/** @unrestricted */\nvar StyleNode = /** @class */ (function () {\n    function StyleNode() {\n        this.start = 0;\n        this.end = 0;\n        this.previous = null;\n        this.parent = null;\n        this.rules = null;\n        this.parsedCssText = '';\n        this.cssText = '';\n        this.atRule = false;\n        this.type = 0;\n        this.keyframesName = '';\n        this.selector = '';\n        this.parsedSelector = '';\n    }\n    return StyleNode;\n}());\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parse(text) {\n    text = clean(text);\n    return parseCss(lex(text), text);\n}\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n    return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n    var root = new StyleNode();\n    root['start'] = 0;\n    root['end'] = text.length;\n    var n = root;\n    for (var i = 0, l = text.length; i < l; i++) {\n        if (text[i] === OPEN_BRACE) {\n            if (!n['rules']) {\n                n['rules'] = [];\n            }\n            var p = n;\n            var previous = p['rules'][p['rules'].length - 1] || null;\n            n = new StyleNode();\n            n['start'] = i + 1;\n            n['parent'] = p;\n            n['previous'] = previous;\n            p['rules'].push(n);\n        }\n        else if (text[i] === CLOSE_BRACE) {\n            n['end'] = i + 1;\n            n = n['parent'] || root;\n        }\n    }\n    return root;\n}\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n    var t = text.substring(node['start'], node['end'] - 1);\n    node['parsedCssText'] = node['cssText'] = t.trim();\n    if (node.parent) {\n        var ss = node.previous ? node.previous['end'] : node.parent['start'];\n        t = text.substring(ss, node['start'] - 1);\n        t = _expandUnicodeEscapes(t);\n        t = t.replace(RX.multipleSpaces, ' ');\n        // TODO(sorvell): ad hoc; make selector include only after last ;\n        // helps with mixin syntax\n        t = t.substring(t.lastIndexOf(';') + 1);\n        var s = node['parsedSelector'] = node['selector'] = t.trim();\n        node['atRule'] = (s.indexOf(AT_START) === 0);\n        // note, support a subset of rule types...\n        if (node['atRule']) {\n            if (s.indexOf(MEDIA_START) === 0) {\n                node['type'] = types.MEDIA_RULE;\n            }\n            else if (s.match(RX.keyframesRule)) {\n                node['type'] = types.KEYFRAMES_RULE;\n                node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\n            }\n        }\n        else {\n            if (s.indexOf(VAR_START) === 0) {\n                node['type'] = types.MIXIN_RULE;\n            }\n            else {\n                node['type'] = types.STYLE_RULE;\n            }\n        }\n    }\n    var r$ = node['rules'];\n    if (r$) {\n        for (var i = 0, l = r$.length, r = void 0; (i < l) && (r = r$[i]); i++) {\n            parseCss(r, text);\n        }\n    }\n    return node;\n}\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n    return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\n        var code = arguments[1], repeat = 6 - code.length;\n        while (repeat--) {\n            code = '0' + code;\n        }\n        return '\\\\' + code;\n    });\n}\n/** @enum {number} */\nvar types = {\n    STYLE_RULE: 1,\n    KEYFRAMES_RULE: 7,\n    MEDIA_RULE: 4,\n    MIXIN_RULE: 1000\n};\nvar OPEN_BRACE = '{';\nvar CLOSE_BRACE = '}';\n// helper regexp's\nvar RX = {\n    comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    port: /@import[^;]*;/gim,\n    customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n    mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n    mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n    varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n    keyframesRule: /^@[^\\s]*keyframes/,\n    multipleSpaces: /\\s+/g\n};\nvar VAR_START = '--';\nvar MEDIA_START = '@media';\nvar AT_START = '@';\nfunction findRegex(regex, cssText, offset) {\n    regex['lastIndex'] = 0;\n    var r = cssText.substring(offset).match(regex);\n    if (r) {\n        var start = offset + r['index'];\n        return {\n            start: start,\n            end: start + r[0].length\n        };\n    }\n    return null;\n}\nvar VAR_USAGE_START = /\\bvar\\(/;\nvar VAR_ASSIGN_START = /\\B--[\\w-]+\\s*:/;\nvar COMMENTS = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim;\nvar TRAILING_LINES = /^[\\t ]+\\n/gm;\nfunction resolveVar(props, prop, fallback) {\n    if (props[prop]) {\n        return props[prop];\n    }\n    if (fallback) {\n        return executeTemplate(fallback, props);\n    }\n    return '';\n}\nfunction findVarEndIndex(cssText, offset) {\n    var count = 0;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (c === '(') {\n            count++;\n        }\n        else if (c === ')') {\n            count--;\n            if (count <= 0) {\n                return i + 1;\n            }\n        }\n    }\n    return i;\n}\nfunction parseVar(cssText, offset) {\n    var varPos = findRegex(VAR_USAGE_START, cssText, offset);\n    if (!varPos) {\n        return null;\n    }\n    var endVar = findVarEndIndex(cssText, varPos.start);\n    var varContent = cssText.substring(varPos.end, endVar - 1);\n    var _a = varContent.split(','), propName = _a[0], fallback = _a.slice(1);\n    return {\n        start: varPos.start,\n        end: endVar,\n        propName: propName.trim(),\n        fallback: fallback.length > 0 ? fallback.join(',').trim() : undefined\n    };\n}\nfunction compileVar(cssText, template, offset) {\n    var varMeta = parseVar(cssText, offset);\n    if (!varMeta) {\n        template.push(cssText.substring(offset, cssText.length));\n        return cssText.length;\n    }\n    var propName = varMeta.propName;\n    var fallback = varMeta.fallback != null ? compileTemplate(varMeta.fallback) : undefined;\n    template.push(cssText.substring(offset, varMeta.start), function (params) { return resolveVar(params, propName, fallback); });\n    return varMeta.end;\n}\nfunction executeTemplate(template, props) {\n    var final = '';\n    for (var i = 0; i < template.length; i++) {\n        var s = template[i];\n        final += (typeof s === 'string')\n            ? s\n            : s(props);\n    }\n    return final;\n}\nfunction findEndValue(cssText, offset) {\n    var onStr = false;\n    var double = false;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (onStr) {\n            if (double && c === '\"') {\n                onStr = false;\n            }\n            if (!double && c === '\\'') {\n                onStr = false;\n            }\n        }\n        else {\n            if (c === '\"') {\n                onStr = true;\n                double = true;\n            }\n            else if (c === '\\'') {\n                onStr = true;\n                double = false;\n            }\n            else if (c === ';') {\n                return i + 1;\n            }\n            else if (c === '}') {\n                return i;\n            }\n        }\n    }\n    return i;\n}\nfunction removeCustomAssigns(cssText) {\n    var final = '';\n    var offset = 0;\n    while (true) {\n        var assignPos = findRegex(VAR_ASSIGN_START, cssText, offset);\n        var start = assignPos ? assignPos.start : cssText.length;\n        final += cssText.substring(offset, start);\n        if (assignPos) {\n            offset = findEndValue(cssText, start);\n        }\n        else {\n            break;\n        }\n    }\n    return final;\n}\nfunction compileTemplate(cssText) {\n    var index = 0;\n    cssText = cssText.replace(COMMENTS, '');\n    cssText = removeCustomAssigns(cssText)\n        .replace(TRAILING_LINES, '');\n    var segments = [];\n    while (index < cssText.length) {\n        index = compileVar(cssText, segments, index);\n    }\n    return segments;\n}\nfunction resolveValues(selectors) {\n    var props = {};\n    selectors.forEach(function (selector) {\n        selector.declarations.forEach(function (dec) {\n            props[dec.prop] = dec.value;\n        });\n    });\n    var propsValues = {};\n    var entries = Object.entries(props);\n    var _loop_1 = function (i) {\n        var dirty = false;\n        entries.forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            var propValue = executeTemplate(value, propsValues);\n            if (propValue !== propsValues[key]) {\n                propsValues[key] = propValue;\n                dirty = true;\n            }\n        });\n        if (!dirty) {\n            return \"break\";\n        }\n    };\n    for (var i = 0; i < 10; i++) {\n        var state_1 = _loop_1();\n        if (state_1 === \"break\")\n            break;\n    }\n    return propsValues;\n}\nfunction getSelectors(root, index) {\n    if (index === void 0) {\n        index = 0;\n    }\n    if (!root.rules) {\n        return [];\n    }\n    var selectors = [];\n    root.rules\n        .filter(function (rule) { return rule.type === types.STYLE_RULE; })\n        .forEach(function (rule) {\n        var declarations = getDeclarations(rule.cssText);\n        if (declarations.length > 0) {\n            rule.parsedSelector.split(',').forEach(function (selector) {\n                selector = selector.trim();\n                selectors.push({\n                    selector: selector,\n                    declarations: declarations,\n                    specificity: computeSpecificity(),\n                    nu: index\n                });\n            });\n        }\n        index++;\n    });\n    return selectors;\n}\nfunction computeSpecificity(_selector) {\n    return 1;\n}\nvar IMPORTANT = '!important';\nvar FIND_DECLARATIONS = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gm;\nfunction getDeclarations(cssText) {\n    var declarations = [];\n    var xArray;\n    while (xArray = FIND_DECLARATIONS.exec(cssText.trim())) {\n        var _a = normalizeValue(xArray[2]), value = _a.value, important = _a.important;\n        declarations.push({\n            prop: xArray[1].trim(),\n            value: compileTemplate(value),\n            important: important,\n        });\n    }\n    return declarations;\n}\nfunction normalizeValue(value) {\n    var regex = /\\s+/gim;\n    value = value.replace(regex, ' ').trim();\n    var important = value.endsWith(IMPORTANT);\n    if (important) {\n        value = value.substr(0, value.length - IMPORTANT.length).trim();\n    }\n    return {\n        value: value,\n        important: important\n    };\n}\nfunction getActiveSelectors(hostEl, hostScopeMap, globalScopes) {\n    // computes the css scopes that might affect this particular element\n    // avoiding using spread arrays to avoid ts helper fns when in es5\n    var scopes = [];\n    var scopesForElement = getScopesForElement(hostScopeMap, hostEl);\n    // globalScopes are always took into account\n    globalScopes.forEach(function (s) { return scopes.push(s); });\n    // the parent scopes are computed by walking parent dom until <html> is reached\n    scopesForElement.forEach(function (s) { return scopes.push(s); });\n    // each scope might have an array of associated selectors\n    // let's flatten the complete array of selectors from all the scopes\n    var selectorSet = getSelectorsForScopes(scopes);\n    // we filter to only the selectors that matches the hostEl\n    var activeSelectors = selectorSet.filter(function (selector) { return matches(hostEl, selector.selector); });\n    // sort selectors by specifity\n    return sortSelectors(activeSelectors);\n}\nfunction getScopesForElement(hostTemplateMap, node) {\n    var scopes = [];\n    while (node) {\n        var scope = hostTemplateMap.get(node);\n        if (scope) {\n            scopes.push(scope);\n        }\n        node = node.parentElement;\n    }\n    return scopes;\n}\nfunction getSelectorsForScopes(scopes) {\n    var selectors = [];\n    scopes.forEach(function (scope) {\n        selectors.push.apply(selectors, scope.selectors);\n    });\n    return selectors;\n}\nfunction sortSelectors(selectors) {\n    selectors.sort(function (a, b) {\n        if (a.specificity === b.specificity) {\n            return a.nu - b.nu;\n        }\n        return a.specificity - b.specificity;\n    });\n    return selectors;\n}\nfunction matches(el, selector) {\n    return selector === ':root' || selector === 'html' || el.matches(selector);\n}\nfunction parseCSS(original) {\n    var ast = parse(original);\n    var template = compileTemplate(original);\n    var selectors = getSelectors(ast);\n    return {\n        original: original,\n        template: template,\n        selectors: selectors,\n        usesCssVars: template.length > 1\n    };\n}\nfunction addGlobalStyle(globalScopes, styleEl) {\n    if (globalScopes.some(function (css) { return css.styleEl === styleEl; })) {\n        return false;\n    }\n    var css = parseCSS(styleEl.textContent);\n    css.styleEl = styleEl;\n    globalScopes.push(css);\n    return true;\n}\nfunction updateGlobalScopes(scopes) {\n    var selectors = getSelectorsForScopes(scopes);\n    var props = resolveValues(selectors);\n    scopes.forEach(function (scope) {\n        if (scope.usesCssVars) {\n            scope.styleEl.textContent = executeTemplate(scope.template, props);\n        }\n    });\n}\nfunction reScope(scope, scopeId) {\n    var template = scope.template.map(function (segment) {\n        return (typeof segment === 'string')\n            ? replaceScope(segment, scope.scopeId, scopeId)\n            : segment;\n    });\n    var selectors = scope.selectors.map(function (sel) {\n        return Object.assign(Object.assign({}, sel), { selector: replaceScope(sel.selector, scope.scopeId, scopeId) });\n    });\n    return Object.assign(Object.assign({}, scope), { template: template,\n        selectors: selectors,\n        scopeId: scopeId });\n}\nfunction replaceScope(original, oldScopeId, newScopeId) {\n    original = replaceAll(original, \"\\\\.\" + oldScopeId, \".\" + newScopeId);\n    return original;\n}\nfunction replaceAll(input, find, replace) {\n    return input.replace(new RegExp(find, 'g'), replace);\n}\nfunction loadDocument(doc, globalScopes) {\n    loadDocumentStyles(doc, globalScopes);\n    return loadDocumentLinks(doc, globalScopes).then(function () {\n        updateGlobalScopes(globalScopes);\n    });\n}\nfunction startWatcher(doc, globalScopes) {\n    var mutation = new MutationObserver(function () {\n        if (loadDocumentStyles(doc, globalScopes)) {\n            updateGlobalScopes(globalScopes);\n        }\n    });\n    mutation.observe(document.head, { childList: true });\n}\nfunction loadDocumentLinks(doc, globalScopes) {\n    var promises = [];\n    var linkElms = doc.querySelectorAll('link[rel=\"stylesheet\"][href]:not([data-no-shim])');\n    for (var i = 0; i < linkElms.length; i++) {\n        promises.push(addGlobalLink(doc, globalScopes, linkElms[i]));\n    }\n    return Promise.all(promises);\n}\nfunction loadDocumentStyles(doc, globalScopes) {\n    var styleElms = Array.from(doc.querySelectorAll('style:not([data-styles]):not([data-no-shim])'));\n    return styleElms\n        .map(function (style) { return addGlobalStyle(globalScopes, style); })\n        .some(Boolean);\n}\nfunction addGlobalLink(doc, globalScopes, linkElm) {\n    var url = linkElm.href;\n    return fetch(url).then(function (rsp) { return rsp.text(); }).then(function (text) {\n        if (hasCssVariables(text) && linkElm.parentNode) {\n            if (hasRelativeUrls(text)) {\n                text = fixRelativeUrls(text, url);\n            }\n            var styleEl = doc.createElement('style');\n            styleEl.setAttribute('data-styles', '');\n            styleEl.textContent = text;\n            addGlobalStyle(globalScopes, styleEl);\n            linkElm.parentNode.insertBefore(styleEl, linkElm);\n            linkElm.remove();\n        }\n    }).catch(function (err) {\n        console.error(err);\n    });\n}\n// This regexp tries to determine when a variable is declared, for example:\n//\n// .my-el { --highlight-color: green; }\n//\n// but we don't want to trigger when a classname uses \"--\" or a pseudo-class is\n// used. We assume that the only characters that can preceed a variable\n// declaration are \"{\", from an opening block, \";\" from a preceeding rule, or a\n// space. This prevents the regexp from matching a word in a selector, since\n// they would need to start with a \".\" or \"#\". (We assume element names don't\n// start with \"--\").\nvar CSS_VARIABLE_REGEXP = /[\\s;{]--[-a-zA-Z0-9]+\\s*:/m;\nfunction hasCssVariables(css) {\n    return css.indexOf('var(') > -1 || CSS_VARIABLE_REGEXP.test(css);\n}\n// This regexp find all url() usages with relative urls\nvar CSS_URL_REGEXP = /url[\\s]*\\([\\s]*['\"]?(?!(?:https?|data)\\:|\\/)([^\\'\\\"\\)]*)[\\s]*['\"]?\\)[\\s]*/gim;\nfunction hasRelativeUrls(css) {\n    CSS_URL_REGEXP.lastIndex = 0;\n    return CSS_URL_REGEXP.test(css);\n}\nfunction fixRelativeUrls(css, originalUrl) {\n    // get the basepath from the original import url\n    var basePath = originalUrl.replace(/[^/]*$/, '');\n    // replace the relative url, with the new relative url\n    return css.replace(CSS_URL_REGEXP, function (fullMatch, url) {\n        // rhe new relative path is the base path + uri\n        // TODO: normalize relative URL\n        var relativeUrl = basePath + url;\n        return fullMatch.replace(url, relativeUrl);\n    });\n}\nvar CustomStyle = /** @class */ (function () {\n    function CustomStyle(win, doc) {\n        this.win = win;\n        this.doc = doc;\n        this.count = 0;\n        this.hostStyleMap = new WeakMap();\n        this.hostScopeMap = new WeakMap();\n        this.globalScopes = [];\n        this.scopesMap = new Map();\n        this.didInit = false;\n    }\n    CustomStyle.prototype.initShim = function () {\n        var _this = this;\n        if (this.didInit) {\n            return Promise.resolve();\n        }\n        else {\n            this.didInit = true;\n            return new Promise(function (resolve) {\n                _this.win.requestAnimationFrame(function () {\n                    startWatcher(_this.doc, _this.globalScopes);\n                    loadDocument(_this.doc, _this.globalScopes).then(function () { return resolve(); });\n                });\n            });\n        }\n    };\n    CustomStyle.prototype.addLink = function (linkEl) {\n        var _this = this;\n        return addGlobalLink(this.doc, this.globalScopes, linkEl).then(function () {\n            _this.updateGlobal();\n        });\n    };\n    CustomStyle.prototype.addGlobalStyle = function (styleEl) {\n        if (addGlobalStyle(this.globalScopes, styleEl)) {\n            this.updateGlobal();\n        }\n    };\n    CustomStyle.prototype.createHostStyle = function (hostEl, cssScopeId, cssText, isScoped) {\n        if (this.hostScopeMap.has(hostEl)) {\n            throw new Error('host style already created');\n        }\n        var baseScope = this.registerHostTemplate(cssText, cssScopeId, isScoped);\n        var styleEl = this.doc.createElement('style');\n        styleEl.setAttribute('data-no-shim', '');\n        if (!baseScope.usesCssVars) {\n            // This component does not use (read) css variables\n            styleEl.textContent = cssText;\n        }\n        else if (isScoped) {\n            // This component is dynamic: uses css var and is scoped\n            styleEl['s-sc'] = cssScopeId = baseScope.scopeId + \"-\" + this.count;\n            styleEl.textContent = '/*needs update*/';\n            this.hostStyleMap.set(hostEl, styleEl);\n            this.hostScopeMap.set(hostEl, reScope(baseScope, cssScopeId));\n            this.count++;\n        }\n        else {\n            // This component uses css vars, but it's no-encapsulation (global static)\n            baseScope.styleEl = styleEl;\n            if (!baseScope.usesCssVars) {\n                styleEl.textContent = executeTemplate(baseScope.template, {});\n            }\n            this.globalScopes.push(baseScope);\n            this.updateGlobal();\n            this.hostScopeMap.set(hostEl, baseScope);\n        }\n        return styleEl;\n    };\n    CustomStyle.prototype.removeHost = function (hostEl) {\n        var css = this.hostStyleMap.get(hostEl);\n        if (css) {\n            css.remove();\n        }\n        this.hostStyleMap.delete(hostEl);\n        this.hostScopeMap.delete(hostEl);\n    };\n    CustomStyle.prototype.updateHost = function (hostEl) {\n        var scope = this.hostScopeMap.get(hostEl);\n        if (scope && scope.usesCssVars && scope.isScoped) {\n            var styleEl = this.hostStyleMap.get(hostEl);\n            if (styleEl) {\n                var selectors = getActiveSelectors(hostEl, this.hostScopeMap, this.globalScopes);\n                var props = resolveValues(selectors);\n                styleEl.textContent = executeTemplate(scope.template, props);\n            }\n        }\n    };\n    CustomStyle.prototype.updateGlobal = function () {\n        updateGlobalScopes(this.globalScopes);\n    };\n    CustomStyle.prototype.registerHostTemplate = function (cssText, scopeId, isScoped) {\n        var scope = this.scopesMap.get(scopeId);\n        if (!scope) {\n            scope = parseCSS(cssText);\n            scope.scopeId = scopeId;\n            scope.isScoped = isScoped;\n            this.scopesMap.set(scopeId, scope);\n        }\n        return scope;\n    };\n    return CustomStyle;\n}());\nvar win = window;\nfunction needsShim() {\n    return !(win.CSS && win.CSS.supports && win.CSS.supports('color', 'var(--c)'));\n}\nif (!win.__stencil_cssshim && needsShim()) {\n    win.__stencil_cssshim = new CustomStyle(win, document);\n}\n"],"sourceRoot":""}