(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"./src/pages/components/ac-input/code.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),b=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/esm.js")),i={};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(b.b)("wrapper",Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"ac-input"},"ac-input"),Object(b.b)("h2",{id:"properties"},"Properties"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),"Property"),Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),"Attribute"),Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),"Default"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"autocapitalize")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"autocapitalize")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement autocapitalize attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"autocomplete")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"autocomplete")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement autocomplete attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"autofocus")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"autofocus")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement autofocus attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"disabled")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"disabled")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The disabled mode."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"error")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"error")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"Set the component in the error state with a message."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean \\| string")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"helperText")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"helper-text")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The helper text to guide the user."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"label")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"label")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The label text of the this input group."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"mask")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"mask")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The mask of the input."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"max")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"max")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement max attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"number")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"maxlength")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"maxlength")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement maxlength attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"number")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"min")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"min")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement min attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"number")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"minlength")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"minlength")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement min attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"number")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"name")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"name")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The HTML input field's name."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"pattern")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"pattern")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement pattern attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"placeholder")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"placeholder")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement placeholder attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"required")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"required")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement required attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"step")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"step")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The native HTMLInputElement step attribute."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"number")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"type")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"type")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The type of the internal input."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"validateOnKeyup")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"validate-on-keyup")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"Request check validation on each input key event."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"validator")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"--"),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The validations that this field need. This validations are checked on: - Blur event - Form submit event - Each keyUp event ONLY IF the validateOnKeyup property is present."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"((value: any, field: FormFieldBehavior, form: FormBehavior) => CustomValidityState \\| Promise<CustomValidityState>) \\| ValidatorFn[]")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"validity")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"--"),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"Get the last validity state from the checkValidity."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"{ [x: string]: boolean \\| { message?: string; }; }")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),"The value of the internal input."),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"any")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"undefined"))))),Object(b.b)("h2",{id:"methods"},"Methods"),Object(b.b)("h3",{id:"getformfieldbehavior--promiseany"},Object(b.b)("inlineCode",{parentName:"h3"},"getFormFieldBehavior() => Promise<any>")),Object(b.b)("p",null,"Used to provide access to the FormField instance."),Object(b.b)("h4",{id:"returns"},"Returns"),Object(b.b)("p",null,"Type: ",Object(b.b)("inlineCode",{parentName:"p"},"Promise<any>")),Object(b.b)("h3",{id:"getnativeformfield--promisehtmlinputelement"},Object(b.b)("inlineCode",{parentName:"h3"},"getNativeFormField() => Promise<HTMLInputElement>")),Object(b.b)("h4",{id:"returns-1"},"Returns"),Object(b.b)("p",null,"Type: ",Object(b.b)("inlineCode",{parentName:"p"},"Promise<HTMLInputElement>")),Object(b.b)("h3",{id:"getrawvaluetype-string--promiseany"},Object(b.b)("inlineCode",{parentName:"h3"},"getRawValue(type?: string) => Promise<any>")),Object(b.b)("p",null,"Get the unmasked value."),Object(b.b)("h4",{id:"returns-2"},"Returns"),Object(b.b)("p",null,"Type: ",Object(b.b)("inlineCode",{parentName:"p"},"Promise<any>")),Object(b.b)("h3",{id:"setfocus--promisevoid"},Object(b.b)("inlineCode",{parentName:"h3"},"setFocus() => Promise<void>")),Object(b.b)("p",null,"Set focus state in the native input."),Object(b.b)("h4",{id:"returns-3"},"Returns"),Object(b.b)("p",null,"Type: ",Object(b.b)("inlineCode",{parentName:"p"},"Promise<void>")),Object(b.b)("h3",{id:"setvaluevalue-any--promisevoid"},Object(b.b)("inlineCode",{parentName:"h3"},"setValue(value: any) => Promise<void>")),Object(b.b)("p",null,"Update the value and run validations as if the user change it manually.\nWhen to use each:\ninput.value will only update the value, useful to set the initial value of the input.\ninput.setValue is useful to use values that are automatically set by an user's action, setting the unchecked state\nto the form."),Object(b.b)("h4",{id:"returns-4"},"Returns"),Object(b.b)("p",null,"Type: ",Object(b.b)("inlineCode",{parentName:"p"},"Promise<void>")),Object(b.b)("h2",{id:"dependencies"},"Dependencies"),Object(b.b)("h3",{id:"depends-on"},"Depends on"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object.assign({parentName:"li"},{href:"../../atoms/ac-input-base"}),"ac-input-base")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object.assign({parentName:"li"},{href:"../../atoms/ac-button"}),"ac-button"))),Object(b.b)("h3",{id:"graph"},"Graph"),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{className:"language-mermaid"}),"graph TD;\n  ac-input --\x3e ac-input-base\n  ac-input --\x3e ac-button\n  style ac-input fill:#f9f,stroke:#333,stroke-width:4px\n")),Object(b.b)("hr",null),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Built with ",Object(b.b)("a",Object.assign({parentName:"em"},{href:"https://stenciljs.com/"}),"StencilJS"))))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/pages/components/ac-input/code.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=src-pages-components-ac-input-code.1ecec3c89af35341185b.js.map