@import "../../theme/variables";

// ---------------------------------------------------------------------------------------------------------------------
// Global Text Style Reset
// ---------------------------------------------------------------------------------------------------------------------

* {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji",
  "Segoe UI Emoji", "Segoe UI Symbol";
}

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0;
  color: current-color("contrast");
  line-height: 1.4;
}

h1 {
  font-size: $font-huge;
  font-weight: bold;
}

h2 {
  font-size: $font-large;
}

h3 {
  font-size: $font-medium;
}

h4 {
  font-size: $font-small;
}

h5 {
  font-size: $font-tiny;
  text-transform: uppercase;
}

h6 {
  font-size: $font-tiny;
}

p {
  color: current-color("contrast", 0.6);
  font-size: $font-small;
  line-height: 1.4;
}

small {
  font-size: $font-tiny;
}

strong, b {
  color: current-color("contrast");
}

a[href] {
  text-decoration: none;
  &.ac-link {
    color: var-color("primary", "light");
    text-decoration: none;
    &:hover, &:active, &:focus {
      text-decoration: underline;
    }
    &:active, &:visited {
      color: var-color("primary", "dark");
    }
  }
}


// ---------------------------------------------------------------------------------------------------------------------
// Text Utils
// ---------------------------------------------------------------------------------------------------------------------

.font-italic {
  font-style: italic;
}

.font-light {
  font-weight: 300;
}

.font-regular {
  font-weight: normal;
}

.font-bold {
  font-weight: bold;
}

.font-black {
  font-weight: 900;
}

.text-subtitle {
  color: current-color("contrast", 0.5);
}


// ---------------------------------------------------------------------------------------------------------------------
// Text Color Utils
// ---------------------------------------------------------------------------------------------------------------------

@each $color in map-keys($theme) {
  @each $variation in map-keys(map_get($theme, $color)) {
    @if $variation != "normal" {
      .text-#{$color}-#{$variation} {
        color: var-color($color, $variation);
      }
    }
  }

  .text-#{$color} {
    color: var-color($color, "normal");
  }
}
